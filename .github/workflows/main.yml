# This is a basic workflow to help you get started with Actions

name: Documentation Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Documentation Testcase"
  documentation_testcase:
    # The type of runner that the job will run on
    name: Rapyuta Documentation Job
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Checkout as many commits as needed for the diff
          fetch-depth: 2
      - shell: pwsh
          # Give an id to the step, so we can reference it later
        id: check_file_changed
        run: |
          # Diff HEAD with the previous commit
          $diff = git diff --name-only HEAD^ HEAD

          # Check if a file under docs/ or with the .md extension has changed (added, modified, deleted)
          $SourceDiff = $diff | Where-Object { $_ -match '^docs/' -or $_ -match '.rst$' }
          $HasDiff = $SourceDiff.Length -gt 0

          # Set the output named "docs_changed"
          Write-Host "::set-output name=docs_changed::$HasDiff"
      
      # Run the step only with "docs_changed" equals "True"
      - shell: pwsh
        # steps.<step_id>.outputs.<output name>
        if: steps.check_file_changed.outputs.docs_changed == 'True'
        run: echo publish docs